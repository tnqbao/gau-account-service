apiVersion: apps/v1
kind: Deployment
metadata:
  name: gau-account-service
  namespace: gau-${DEPLOY_ENV}-env
  labels:
    app: gau-account-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gau-account-service
  template:
    metadata:
      labels:
        app: gau-account-service
    spec:
      containers:
        - name: gau-account-api
          image: ${DOCKER_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: gau-account-service-config
          command: ["/gau_account/entrypoint.sh", "api"]
          resources:
            requests:
              memory: "512Mi"
              cpu: "0.5"
            limits:
              memory: "1Gi"
              cpu: "2"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgpool
  namespace: gau-${DEPLOY_ENV}-env
  labels:
    app: pgpool
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgpool
  template:
    metadata:
      labels:
        app: pgpool
    spec:
      containers:
        - name: pgpool
          image: bitnami/pgpool:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: PGPOOL_BACKEND_NODES
              value: "${PGPOOL_BACKEND_NODES}"
            - name: PGPOOL_SR_CHECK_USER
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_USER
            - name: PGPOOL_SR_CHECK_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_PASSWORD
            - name: PGPOOL_POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_USER
            - name: PGPOOL_POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_PASSWORD
            - name: PGPOOL_ADMIN_USERNAME
              value: "pgpool_admin"
            - name: PGPOOL_ADMIN_PASSWORD
              value: "securePassword123"
          resources:
            requests:
              memory: "512Mi"
              cpu: "1"
            limits:
              memory: "1Gi"
              cpu: "2"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: gau-${DEPLOY_ENV}-env
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:14
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_DBNAME
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: PGPOOL_PASSWORD
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: gau-${DEPLOY_ENV}-env
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: gau-account-service-config
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.5"
            limits:
              memory: "512Mi"
              cpu: "1"